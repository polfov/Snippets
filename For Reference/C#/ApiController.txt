
[RoutePrefix("api/skills")]
public class SkillsApiController : ApiController
{
	private ISkillService _skillService = null;
	public SkillsApiController (ISkillService skillService)
	{
		_skillService = skillService;
	}
	[Route, HttpPost]
	public HttpResponseMessage Post(SkillAddRequest model)
	{
		if (!ModelState.IsValid)
		{
			return Request.CreateResponse(HttpStatusCode.BadRequest, ModelState);
		}
		ItemResponse<int> response = new ItemResponse<int>();
		response.Item = _skillService.Post(model);
		return Request.CreateResponse(HttpStatusCode.OK, response);
	}
	[Route("{id:int}"), HttpPut]
	public HttpResponseMessage Put(SkillUpdateRequest model)
	{
		if (!ModelState.IsValid)
		{
			return Request.CreateResponse(HttpStatusCode.BadRequest, ModelState);
		}

		_skillService.Update(model);

		SuccessResponse response = new SuccessResponse();

		return Request.CreateResponse(HttpStatusCode.OK, response);
	}
	[Route("{id:int}"), HttpGet]
	public HttpResponseMessage SelectById(int id)
	{
		if (!ModelState.IsValid)
		{
			return Request.CreateResponse(HttpStatusCode.BadRequest, ModelState);
		}

		ItemResponse<Skill> response = new ItemResponse<Skill>();

		response.Item = _skillService.SelectById(id);

		return Request.CreateResponse(HttpStatusCode.OK, response);
	}
	[Route, HttpGet]
	public HttpResponseMessage SelectAll()
	{
		if (!ModelState.IsValid)
		{
			return Request.CreateResponse(HttpStatusCode.BadRequest, ModelState);
		}

		ItemsResponse<Skill> response = new ItemsResponse<Skill>();
		response.Items = _skillService.SelectAll();

		return Request.CreateResponse(HttpStatusCode.OK, response);
	}
	[Route("{id:int}"), HttpDelete]
	public HttpResponseMessage Delete(int id)
	{
		_skillService.Delete(id);

		SuccessResponse response = new SuccessResponse();

		return Request.CreateResponse(HttpStatusCode.OK, response);
	}
}